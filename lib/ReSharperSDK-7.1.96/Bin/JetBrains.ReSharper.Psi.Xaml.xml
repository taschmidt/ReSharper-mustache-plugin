<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Psi.Xaml</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlAttachedEvent}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlAttachedEvent))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = PsiXamlThemedIcons.XamlAttachedEvent.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(PsiXamlThemedIcons.XamlAttachedEvent), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlAttachedEvent&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedEvent">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlAttachedEvent Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedEvent.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlAttachedEvent}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlAttachedEvent))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlAttachedEvent.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlAttachedEvent&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedEvent.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlAttachedEvent Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedEvent"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlAttachedEvent}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlAttachedEvent))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlAttachedEvent.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlAttachedEvent&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedProperty">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlAttachedProperty Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedProperty.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlAttachedProperty}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlAttachedProperty))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlAttachedProperty.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlAttachedProperty&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedProperty.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlAttachedProperty Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlAttachedProperty"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlAttachedProperty}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlAttachedProperty))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlAttachedProperty.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlAttachedProperty&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlFile">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlFile Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlFile.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlFile}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlFile))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlFile.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlFile&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlFile.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlFile Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlFile"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlFile}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlFile))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlFile.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlFile&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlMarkupExtension">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlMarkupExtension Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlMarkupExtension.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlMarkupExtension}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlMarkupExtension))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlMarkupExtension.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlMarkupExtension&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlMarkupExtension.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlMarkupExtension Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlMarkupExtension"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlMarkupExtension}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlMarkupExtension))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlMarkupExtension.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlMarkupExtension&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlNamespaceAlias">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlNamespaceAlias Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlNamespaceAlias.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlNamespaceAlias}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlNamespaceAlias))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlNamespaceAlias.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlNamespaceAlias&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlNamespaceAlias.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlNamespaceAlias Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlNamespaceAlias"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlNamespaceAlias}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlNamespaceAlias))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlNamespaceAlias.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlNamespaceAlias&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedAttributeElement">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlPredefinedAttributeElement Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedAttributeElement.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlPredefinedAttributeElement}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlPredefinedAttributeElement))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlPredefinedAttributeElement.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlPredefinedAttributeElement&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedAttributeElement.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlPredefinedAttributeElement Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedAttributeElement"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlPredefinedAttributeElement}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlPredefinedAttributeElement))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlPredefinedAttributeElement.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlPredefinedAttributeElement&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedObjectElement">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlPredefinedObjectElement Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedObjectElement.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlPredefinedObjectElement}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlPredefinedObjectElement))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlPredefinedObjectElement.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlPredefinedObjectElement&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedObjectElement.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlPredefinedObjectElement Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlPredefinedObjectElement"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlPredefinedObjectElement}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlPredefinedObjectElement))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlPredefinedObjectElement.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlPredefinedObjectElement&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlResource">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlResource Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlResource.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlResource}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlResource))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlResource.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlResource&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlResource.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlResource Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlResource"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlResource}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlResource))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlResource.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlResource&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlTemplateField">
             <summary>
              <para>
                <para>Autogenerated identifier class for the XamlTemplateField Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlTemplateField.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlTemplateField}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlTemplateField))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlTemplateField.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlTemplateField&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlTemplateField.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the XamlTemplateField Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons.XamlTemplateField"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Xaml.Resources.PsiXamlThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiXamlThemedIcons+XamlTemplateField}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiXamlThemedIcons.XamlTemplateField))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiXamlThemedIcons.XamlTemplateField.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiXamlThemedIcons.XamlTemplateField&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.DeclaredElements.IXamlResource.GetKeyType(JetBrains.ReSharper.Psi.IPsiModule)">
            <summary>
            If x:Key is defined using x:Type markup or it is a style with target type only
            </summary>
            <param name="psiModule"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.DeclaredElements.IXamlResource.GetStaticKey(JetBrains.ReSharper.Psi.IPsiModule)">
            <summary>
            If x:Key is defined with x:Static markup
            </summary>
            <param name="psiModule"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.DeclaredElements.IXamlResource.GetTargetType(JetBrains.ReSharper.Psi.IPsiModule)">
            <summary>
            Returns target type of Style/ Control template resource
            </summary>
            <param name="psiModule"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.DeclaredElements.IXamlResource.GetResourceType(JetBrains.ReSharper.Psi.IPsiModule)">
            <summary>
            Returns type of the declared resource
            </summary>
            <param name="psiModule"></param>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlObjectElement">
            <summary>Xaml object element</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlDeclaration.GetPossibleDeclaredNames">
            <returns>string that would be DeclaredName if declared element is created. Called while building caches only</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlObjectElementDeclaration`1.Name">
            <summary>Unquoted control name</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IResourceDeclaration">
            <summary>
            Xaml object element, that can declare resource
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlPropertyElement">
            <summary>Property element (i.e. Button.Content)</summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlPropertyElement.ExpectedElementType">
            <summary>Cached expected type of child tags</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Tree.IPropertyAttributeValue.GetTextToken">
            <summary>Returns text within attribute, if it is not a markup attribute</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Tree.IPropertyAttributeValue.GetMarkups">
            <summary>Returns list of all top-level markup entries</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Tree.PropertyAttributeValue.GetMarkups">
            <summary>
            Returns list of all top-level markup entries
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.IMarkupAttribute.Name">
            <summary>Attribute name</summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.IMarkupAttribute.Value">
            <summary>Markup value</summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.IMarkup.Name">
            <summary>
            Name of the markup
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.IMarkup.Value">
            <summary>
            Value, that can be nested markup
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.ISourceTraversalValue">
            <summary>
            Valid costructs are: /
            qualifier/
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.ITypeExpressionTypeArguments.TypeArguments">
            <summary>
            TypeArguments my be null though
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IFieldDeclaration">
            <summary>Xaml object element, that can declare field</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedMembersUtil.IsTypeAttachable(JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.IType)">
            <summary>
            Detects if type can has some property/event attached.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedMembersUtil.AttachedDefiningTypeFilter">
            <summary>
            Filter only attached properties/events defined by 'myAttachedOwnerType'
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.IsAddHandler(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.Resolve.ISubstitution,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Checks method to be the Add-accesor method of attached event.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.IsRemoveHandler(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.Resolve.ISubstitution,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Checks method to be the Remove-accesor method of attached event.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.IsRoutedEventField(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.Resolve.ISubstitution)">
            <summary>
            Checks field to be the routed event field.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.GetAttachedEventType(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.Resolve.ISubstitution,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Returns the event type by the attached event accessor signature.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CheckAccessorMethodSignature(JetBrains.ReSharper.Psi.IMethod)">
            <summary>
            Checks method to be static void-returning method with two parameters,
            second of delegate type.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CheckAcessorOwnerType(JetBrains.ReSharper.Psi.IMethod,JetBrains.ReSharper.Psi.IType)">
            <summary>
            Checks attached event accessor method for first parameter type
            to be equal or explicitly convertible to expected type.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CheckEventField(JetBrains.ReSharper.Psi.IMethod,JetBrains.ReSharper.Psi.Resolve.ISubstitution,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Checks attached event accessor to have routed event field defined in the same class.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CreateAddHandlerFilters(System.String,JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Resolve.ISymbolFilter,JetBrains.ReSharper.Psi.IType)">
            <summary>
            Returns filters list for attached events Add-accessor lookup.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CreateRemoveHandlerFilters(System.String,JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Resolve.ISymbolFilter,JetBrains.ReSharper.Psi.IType)">
            <summary>
            Returns filters list for attached events Remove-accessor lookup.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CreateRoutedEventFieldFilters(JetBrains.ReSharper.Psi.IPsiModule)">
            <summary>
            Returns filters list for routed event fields lookup.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.CreateRoutedEventFilters(System.String,JetBrains.ReSharper.Psi.IPsiModule,JetBrains.ReSharper.Psi.Resolve.ISymbolFilter)">
            <summary>
            Returs filters list for routed events with CLR accessors
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.AttachedAccessorSignatureFilter">
            <summary>
            Accepts static method with the void return type
            and 2 parameters, second of delegate type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.AttachedAccessorOwnerTypeFilter">
            <summary>
            Accepts method with the first parameter of type equal
            or implicitly convertible to specified owner type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.RoutedEventFieldTypeFilter">
            <summary>
            Accepts type owner with expected type or type implicitly
            convertible to exprected by CLR rules.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Impl.Util.AttachedEventUtil.HasRoutedEventFieldFilter">
            <summary>
            Accepts events or add accessor methods with the routed event
            fields defined near in the same type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.MarkupExtensions.IIdentifierMarkupValue">
            <summary>
            Simple markup entry, that consists of identifier only
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Psi.Xaml.Tree.IStyleDeclaration.BasedOnTypeReference">
            <summary>
            Reference on type, identified by BasedOn attribute
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.Util.BindingUtil.CalculateSourceTypeLocal(JetBrains.ReSharper.Psi.Xaml.Tree.IBinding,JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Xaml.Tree.IXamlObjectElement@)">
            <summary>Returns null when no source element is defined</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Impl.XamlCacheProviderData.UpdateDefaultNamespaceIfNecessary(JetBrains.ProjectModel.IProject)">
            <summary>True, if chaged</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Xaml.Tree.BindingExtension.GetBindingSourceType(JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Xaml.Tree.IXamlObjectElement@)">
            <summary>Returns source type used to resolve paths in binding</summary>
            <param name="binding">Binding element</param>
            <param name="objectElement">Binding context</param>
            <returns>Binding source type</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlIdentifier">
            <summary>
            XamlIdentifier has the form [[XmlNamemespace:]Qualifier.]Id
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlTypeDeclaration">
            <summary>
            Xaml root element. Declares partial type
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Xaml.Tree.IXamlFile">
            <summary>Xaml file</summary>
        </member>
    </members>
</doc>
