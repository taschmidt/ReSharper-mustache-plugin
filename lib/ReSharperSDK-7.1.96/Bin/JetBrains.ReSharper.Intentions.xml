<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Intentions</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Intentions.Extensibility.IQuickFix">
            <summary>
            Represents a quick-fix. Quick-fixes are bulb actions that appear in response to
            highlighted errors or suggestions (see <see cref="T:JetBrains.ReSharper.Daemon.IHighlighting"/>), and typically
            serve to correct the highlighted problem.
            </summary>
            <remarks>&gt;If your quick-fix consists of just a single bulb items, you can inherit from
            <c>BulbActionBase</c> in addition to implementing this interface.</remarks>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.IQuickFix.IsAvailable(JetBrains.Util.IUserDataHolder)">
            <summary>
            Check if this action is available at the constructed context.
            Actions could store precalculated info in <paramref name="cache"/> to share it between different actions
            </summary>
            <returns>true if this bulb action is available, false otherwise.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.IBulbAction.Execute(JetBrains.ProjectModel.ISolution,JetBrains.TextControl.ITextControl)">
            <summary>
            Invoked when the user executes this bulb item.
            </summary>
            <param name="solution">The currently open solution.</param>
            <param name="textControl">The text control that is currently open</param>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Extensibility.IBulbAction.Text">
            <summary>
            The text rendered directly on the bulb item.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.BulbActionBase.ExecuteBeforeProgressAndTransaction(JetBrains.ProjectModel.ISolution)">
            <summary>
              Called to prepare QuickFix or ContextAction execution.
            </summary>
            <param name="solution"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.BulbActionBase.ExecuteBeforePsiTransaction(JetBrains.ProjectModel.ISolution,JetBrains.ProjectModel.IProjectModelTransactionCookie,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
              Called to prepare QuickFix or ContextAction execution.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.BulbActionBase.ExecutePsiTransaction(JetBrains.ProjectModel.ISolution,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
              Executes QuickFix or ContextAction. Returns post-execute method.
            </summary>
            <returns>
              Action to execute after document and PSI transaction finish. Use to open TextControls, navigate caret, etc.
            </returns>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.BulbActionBase.ExecuteAfterPsiTransaction(JetBrains.ProjectModel.ISolution,JetBrains.ProjectModel.IProjectModelTransactionCookie,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
              Executes after PSI transaction under Project/Document transaction
            </summary>
            <returns>
              Action to execute after document and PSI transaction finish. Use to open TextControls, navigate caret, etc.
            </returns>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Extensibility.BulbActionBase.Text">
            <summary>
            Popup menu item text
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Extensibility.IContextAction">
            <summary>
            Represents a context action. Context actions are bulb actions that appear depending on
            the location currently being edited. Context actions must be decorated with the
            <see cref="T:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute"/>, and their constructor should take a parameter of
            a type derived from <see cref="T:JetBrains.ReSharper.Feature.Services.Bulbs.IContextActionDataProvider"/>.
            </summary>
            <remarks>&gt;If your context action consists of just a single bulb items, you can inherit from
            <c>BulbActionBase</c> in addition to implementing this interface.</remarks>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.IContextAction.IsAvailable(JetBrains.Util.IUserDataHolder)">
            <summary>
            Check if this action is available at the constructed context.
            Actions could store precalculated info in <paramref name="cache"/> to share it between different actions
            </summary>
            <returns>true if this bulb action is available, false otherwise.</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Bulbs.IBulbItem">
            <summary>
            Represents a single lightbulb-bearing menu item.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute">
            <summary>
            Indicates that the class, marked with this attribute, is a context action.
            See <see cref="T:JetBrains.ReSharper.Intentions.Extensibility.IContextAction"/> for more information.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute.Group">
            <summary>
            The context action group (e.g., "C#", "VB", etc.) to which the context action belongs.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute.Name">
            <summary>
            The name of this context action.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute.Description">
            <summary>
            Textual description of what the context action does.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute.Priority">
            <summary>
            A number indicating the priority of the action. Affects the position of the action in the pop-up menu.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionAttribute.Disabled">
            <summary>
            Determines whether the action is disabled by default.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Bulbs.ContextActionTable.InstantiateAvailableActions(System.Func{JetBrains.DataFlow.Lifetime,JetBrains.Application.DataContext.DataContexts,JetBrains.Application.DataContext.IDataContext},System.Collections.Generic.IDictionary{System.Type,JetBrains.ReSharper.Feature.Services.Bulbs.IContextActionDataProvider},JetBrains.Util.IUserDataHolder)">
            <summary>
            Cache some data using <see cref="T:JetBrains.ReSharper.Feature.Services.Bulbs.IContextActionDataBuilder"/> in UI thread
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Bulbs.IContextActionInfo">
            <summary>
            Info about loaded context action
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.IContextActionInfo.Type">
            <summary>
            Class type which implements this action
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.Bulbs.IContextActionInfo.ParameterType">
            <summary>
            Type of CA constructor parameter
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Extensibility.ICustomHighlightingActionProvider">
            <summary>
            Class should be marked by <see cref="T:JetBrains.ReSharper.Intentions.Extensibility.CustomHighlightingActionProviderAttribute"/> attribute and should implement
            <see cref="T:JetBrains.ReSharper.Intentions.Extensibility.ICustomHighlightingActionProvider"/> interface to be able to provide custom actions for highlighting
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Extensibility.CustomHighlightingActionProviderAttribute">
            <summary>
            Class should be marked by <see cref="T:JetBrains.ReSharper.Intentions.Extensibility.CustomHighlightingActionProviderAttribute"/> attribute and should implement
            <see cref="T:JetBrains.ReSharper.Intentions.Extensibility.ICustomHighlightingActionProvider"/> interface to be able to provide custom actions for highlighting
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Daemon.IQuickFixes.CreateWarningActions(JetBrains.ReSharper.Daemon.IHighlighting,JetBrains.ProjectModel.ISolution,JetBrains.DocumentModel.DocumentRange,JetBrains.ReSharper.Intentions.Extensibility.Menu.BulbMenu,JetBrains.DataFlow.Lifetime)">
            <summary>
             Get actions which could disable given specific highlighting
             </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Bulbs.QuickFixAttribute">
            <summary>
            Indicates that the class, marked with this attribute, is a quick-fix. 
            It will be automatically registered for all errors, 
            for which it has public constructors
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.CreateFromUsage.ICreateFromUsageAction.GetBulbItem">
            <summary>
            
            </summary>
            <returns>null if item is not available</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator">
            <summary>
              The bulb indicator.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase">
            <summary>
            Base for the two types of popup indicators: bulb indiactor and import popup.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.myTriggerOnMouseUp">
            <summary>
            Bulb dropdown triggers on mouse-down event, and the popup indicator does it on mouse click
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.myAutoActivate">
            <summary>
            <see cref="P:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.AutoActivate"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Tells the control the details about the new layout applied to it by the controlling entity in conjunction with some <see cref="T:JetBrains.UI.IPopupLayouter"/>.
            Typically, the control need not apply the given size and location because that should be done by the controlling entity.
            The control may change its presentation in response to the layouting details, for example, whether it's attached to the top or the bottom of the anchoring rect.
            </summary>
            <param name="layout">The layouting details.</param>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.AutoActivate">
            <summary>
            Gets or sets whether the control should be activated initially when it's shown.
            The typical implementation for a form is to return a negative of this value from the <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation"/> override.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicatorBase.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.ArrowGap">
            <summary>
              width of gap between indicator image and down arrow
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.ArrowSize">
            <summary>
              Size of down arrow
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.BorderWidth">
            <summary>
              width of indicator border (hot mode)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.IndicatorPadding">
            <summary>
              Padding around indicator including border. Used also as a distance from base point to image.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.ShadowExtentBottom">
            <summary>
              extra space required for image shadow frame
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.myColors">
            <summary>
              <see cref="T:JetBrains.UI.PopupMenu.JetPopupMenu"/>
              -compatible colors set.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.myImage">
            <summary>
              Antialiased image for the backgrounded-mode display.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.GetImageSize">
            <summary>
              Gets the image size, or the default 16?16 size if it has not been specified yet.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.OnMenuDescribeItem(JetBrains.UI.PopupMenu.DescribeItemEventArgs)">
            <summary>
              Creates the menu item descriptor.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.DrawImageAlpha(System.Drawing.Graphics,System.Single)">
            <summary>
              Display indicator image on a given surface with alpha blending
            </summary>
            <param name="graphics"></param>
            <param name="a"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.RenderGuts">
            <summary>
              Renders just the bulb and the "hot" arrow into a bitmap, without a border and background.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.CollectBulbItemKeys(JetBrains.ReSharper.Intentions.Extensibility.Menu.BulbMenu)">
            <summary>
              Fills the items-to-actions map and returns the collection of all the items extracted from the actions.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
              Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
              Should give generally the same results as
              <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>
              , but could employ the
              <paramref name="gc"/>
              device context for the sake of optimization.
            </summary>
            <param name="gc">
              The device context to measure against.
            </param>
            <param name="limit">
              The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
              May be a
              <see cref="T:System.Drawing.Size"/>
              with width and height equal to
              <see cref="F:System.Int32.MaxValue"/>
              , which means that the size is not limited.
            </param>
            <returns>
              The desired size, must be no larger than
              <paramref name="limit"/>
              .
            </returns>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.Image">
            <summary>
              Gets the image of this indicator.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Bulbs.BulbIndicator.MouseOver">
            <summary>
              Gets or sets the “hot” control state.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.BulbManagerImpl.BuildAvailableQuickFixes(JetBrains.ReSharper.Intentions.Bulbs.BulbManagerImpl.BulbCache,JetBrains.ReSharper.Intentions.Bulbs.VisibleActions,JetBrains.TextControl.ITextControl)">
            <summary>
            Cannot be done async, since it deals with markup
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Bulbs.PopupIndicator">
            <summary>
            The blueish popup indicator with icon and text, eg, the “Import Namespace” popup.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Bulbs.PopupIndicator.myHot">
            <summary>
            True whenif the mouse is over the control.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.PopupIndicator.PaintImpl(System.Drawing.Graphics)">
            <summary>
            Does the rendering.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.PopupIndicator.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.PopupIndicator.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter"></see> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Bulbs.PopupIndicator.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"></see> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.ContextActionInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Explanatory.CodeInspectionWikiProvider">
            <summary>
            Provides bulb items that offer to explain why ReSharper is
            issuing a particular warning or suggestion.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Extensibility.IBulbItemRichText">
            <summary>
            This interface should be implemented by bulb items that want to display
            <see cref="P:JetBrains.ReSharper.Intentions.Extensibility.IBulbItemRichText.RichText"/> as opposed to plain text.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Extensibility.IBulbItemRichText.RichText">
            <summary>
            Text to be displayed on the bulb item.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Extensibility.IPopupBulbAction">
            <summary>
            A bulb action that appears in popup window. It <strong>never</strong> appears in a bulb menu.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Extensibility.IPopupBulbAction.IsAvailable(JetBrains.Util.IUserDataHolder)">
            <summary>
            Check if this action is available at the constructed context.
            Actions could store precalculated info in <paramref name="cache"/> to share it between different actions
            </summary>
            <returns>true if this bulb action is available, false otherwise.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Extensibility.IPopupBulbAction.PopupKey">
            <summary>
            This key used for popup supressing if user pressed 'Esc' key
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Extensibility.IPopupBulbAction.PopupAnchorings">
            <summary>
            Uses <see cref="P:JetBrains.UI.Anchoring2D.AnchorTopOrBottom"/> by default.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Extensibility.IPopupBulbAction.Items">
            <summary>
            An array of bulb items that this bulb action supports.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Options.CommonContextActionsPage">
            <summary>
            Context actions.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase">
            <summary>
            A page with the list of enablable context actions.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.ourHtmlCueBannerNoDescriptionAvailable">
            <summary>
            The “no description” cue banner to show instead of the description text when there is none.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.ourHtmlCueBannerNoSelection">
            <summary>
            The “no selection” cue banner to occupy the empty space under the list when nothing is selected.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.ourHtmlPreviewResourceName">
            <summary>
            The HTML resource with the preview area template.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.mySelectedItem">
            <summary>
            The selected context actions in the context actions tree.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.SaveContextActionsCheckState">
            <summary>
            Reads from the <see cref="F:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.myMapContextActionToCheckState"/>, writes to the settings.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            
            <param name="msg">The Windows <see cref="T:System.Windows.Forms.Message"></see> to process. </param>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Options.ContextActionsPageBase.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.OptionsManager"/> or <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> out of it.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.Options.CommonContextActionsPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.ContextActions.SurroundWithQuotesActionBase.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:JetBrains.ReSharper.Intentions.ContextActions.UseStringEmptyActionBase.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Legacy.ContextActionBase_Obsolete.IsAvailableInternal">
            <summary>
            Called to check if ContextAction is available.
            ReadLock is taken
            Will not be called if PsiManager, ProjectFile of Solution == null
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Intentions.Legacy.ContextActionBase_Obsolete.ExecuteInternal(System.Object[])">
            <summary>
            Called to apply context action. No locks is taken before call
            </summary>
        </member>
    </members>
</doc>
