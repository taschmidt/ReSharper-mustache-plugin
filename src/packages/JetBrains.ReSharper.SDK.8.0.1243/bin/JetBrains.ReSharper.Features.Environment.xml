<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Features.Environment</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+AddFile}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.AddFile))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = FeaturesEnvironmentThemedIcons.AddFile.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(FeaturesEnvironmentThemedIcons.AddFile), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.AddFile&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.AddFile">
             <summary>
              <para>
                <para>Autogenerated identifier class for the AddFile Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.AddFile.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+AddFile}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.AddFile))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.AddFile.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.AddFile&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.AddFile.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the AddFile Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.AddFile"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+AddFile}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.AddFile))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.AddFile.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.AddFile&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.CacheNotifierGlyph">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CacheNotifierGlyph Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.CacheNotifierGlyph.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+CacheNotifierGlyph}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.CacheNotifierGlyph))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.CacheNotifierGlyph.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.CacheNotifierGlyph&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.CacheNotifierGlyph.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CacheNotifierGlyph Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.CacheNotifierGlyph"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+CacheNotifierGlyph}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.CacheNotifierGlyph))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.CacheNotifierGlyph.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.CacheNotifierGlyph&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.NAEnvironment">
             <summary>
              <para>
                <para>Autogenerated identifier class for the NAEnvironment Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.NAEnvironment.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+NAEnvironment}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.NAEnvironment))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.NAEnvironment.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.NAEnvironment&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.NAEnvironment.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the NAEnvironment Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.NAEnvironment"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+NAEnvironment}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.NAEnvironment))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.NAEnvironment.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.NAEnvironment&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.Tip">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Tip Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.Tip.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+Tip}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.Tip))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.Tip.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.Tip&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.Tip.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Tip Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons.Tip"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Resources.FeaturesEnvironmentThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentThemedIcons+Tip}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentThemedIcons.Tip))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentThemedIcons.Tip.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentThemedIcons.Tip&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.Impl.CodeStylePageWithPreviewOnSettingsKey.CreateCodeStylePreview(JetBrains.TextControl.DocumentMarkup.IDocumentMarkupManager,JetBrains.UI.WindowManagement.WindowFrame,JetBrains.ProjectModel.ISolution,JetBrains.ProjectModel.FileTypes.IProjectFileTypeServices)">
            <summary>
             Create preview box
            </summary>
            <param name="documentMarkupManager"></param>
            <param name="windowFrame"></param>
            <param name="solution"></param>
            <param name="projectFileTypeServices"> </param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.Impl.CodeStylePageWithPreviewOnSettingsKey.CodeStyleDef">
            <summary>
            Returns string with the page data resource
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.Impl.CodeStylePageWithPreviewOnSettingsKey.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.OptionsManager"/> or <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> out of it.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.OptionPages.CodeStyle.Impl.CodeStylePreview.PrepareText(JetBrains.DocumentModel.IDocument,System.String,JetBrains.ReSharper.OptionPages.CodeStyle.Impl.PreviewParseType,JetBrains.Application.Settings.IContextBoundSettingsStore)">
            <summary>
            Do reformat text and set it to given document. If format settings are null, then no formatting should be applied
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.Impl.EditItems.CodeStyleEditItem.FixupSettingsForPreview(JetBrains.Application.Settings.IContextBoundSettingsStore)">
            <summary>
            Modify code style settings for the preview
            </summary>
            <param name="settingsStore"></param>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+BracesLayout}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.BracesLayout))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = FeaturesEnvironmentOptionsThemedIcons.BracesLayout.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(FeaturesEnvironmentOptionsThemedIcons.BracesLayout), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.BracesLayout&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.BracesLayout">
             <summary>
              <para>
                <para>Autogenerated identifier class for the BracesLayout Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.BracesLayout.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+BracesLayout}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.BracesLayout))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.BracesLayout.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.BracesLayout&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.BracesLayout.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the BracesLayout Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.BracesLayout"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+BracesLayout}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.BracesLayout))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.BracesLayout.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.BracesLayout&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeInspections">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CodeInspections Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeInspections.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+CodeInspections}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.CodeInspections))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.CodeInspections.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.CodeInspections&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeInspections.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CodeInspections Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeInspections"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+CodeInspections}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.CodeInspections))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.CodeInspections.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.CodeInspections&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeStyle">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CodeStyle Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeStyle.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+CodeStyle}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.CodeStyle))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.CodeStyle.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.CodeStyle&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeStyle.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CodeStyle Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.CodeStyle"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+CodeStyle}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.CodeStyle))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.CodeStyle.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.CodeStyle&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral">
             <summary>
              <para>
                <para>Autogenerated identifier class for the EnvironmentGeneral Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+EnvironmentGeneral}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the EnvironmentGeneral Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+EnvironmentGeneral}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.EnvironmentGeneral&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GeneratedCode">
             <summary>
              <para>
                <para>Autogenerated identifier class for the GeneratedCode Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GeneratedCode.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+GeneratedCode}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.GeneratedCode))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.GeneratedCode.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.GeneratedCode&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GeneratedCode.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the GeneratedCode Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GeneratedCode"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+GeneratedCode}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.GeneratedCode))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.GeneratedCode.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.GeneratedCode&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis">
             <summary>
              <para>
                <para>Autogenerated identifier class for the GlobalAnalysis Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+GlobalAnalysis}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the GlobalAnalysis Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+GlobalAnalysis}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.GlobalAnalysis&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Highlighting">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Highlighting Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Highlighting.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+Highlighting}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.Highlighting))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.Highlighting.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.Highlighting&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Highlighting.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Highlighting Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Highlighting"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+Highlighting}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.Highlighting))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.Highlighting.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.Highlighting&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.NamingConvention">
             <summary>
              <para>
                <para>Autogenerated identifier class for the NamingConvention Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.NamingConvention.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+NamingConvention}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.NamingConvention))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.NamingConvention.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.NamingConvention&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.NamingConvention.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the NamingConvention Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.NamingConvention"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+NamingConvention}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.NamingConvention))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.NamingConvention.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.NamingConvention&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Persistence">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Persistence Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Persistence.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+Persistence}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.Persistence))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.Persistence.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.Persistence&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Persistence.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Persistence Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Persistence"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+Persistence}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.Persistence))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.Persistence.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.Persistence&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Quickfixes">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Quickfixes Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Quickfixes.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+Quickfixes}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.Quickfixes))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.Quickfixes.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.Quickfixes&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Quickfixes.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Quickfixes Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.Quickfixes"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+Quickfixes}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.Quickfixes))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.Quickfixes.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.Quickfixes&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.StringFormat">
             <summary>
              <para>
                <para>Autogenerated identifier class for the StringFormat Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.StringFormat.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+StringFormat}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.StringFormat))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.StringFormat.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.StringFormat&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.StringFormat.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the StringFormat Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.StringFormat"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+StringFormat}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.StringFormat))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.StringFormat.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.StringFormat&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout">
             <summary>
              <para>
                <para>Autogenerated identifier class for the TypeMembersLayout Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+TypeMembersLayout}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the TypeMembersLayout Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+TypeMembersLayout}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.TypeMembersLayout&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.UsingDirectives">
             <summary>
              <para>
                <para>Autogenerated identifier class for the UsingDirectives Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.UsingDirectives.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+UsingDirectives}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.UsingDirectives))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.UsingDirectives.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.UsingDirectives&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.UsingDirectives.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the UsingDirectives Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.UsingDirectives"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+UsingDirectives}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.UsingDirectives))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.UsingDirectives.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.UsingDirectives&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ValueAnalysis Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+ValueAnalysis}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ValueAnalysis Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.FeaturesEnvironmentOptionsThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesEnvironmentOptionsThemedIcons+ValueAnalysis}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesEnvironmentOptionsThemedIcons.ValueAnalysis&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Inspections.CodeInspectionPage">
            <summary>
            Root options page for the global per-language options.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Inspections.CodeInspectionSettingsPage">
            <summary>
            Main settings for the code inspection.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Inspections.CodeInspectionSettingsPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Inspections.CodeInspectionGeneratedPage">
            <summary>
            Main settings for the code inspection.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Inspections.CodeInspectionGeneratedPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Inspections.GeneratedFilesItems.myTreeHasSelection">
            <summary>
            Whether there're selected items currently in the tree.
            To manage the Remove button's Enabled state.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Inspections.InspectionSeverityPage">
            <summary>
            Severities of the inspections (error/warning/suggestion hilites).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.Inspections.InspectionSeverityPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.OptionsManager"/> or <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Inspections.InspectionSeverityView">
            <summary>
            Interaction logic for Window1.xaml
            </summary>
            <summary>
            InspectionSeverityView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Inspections.InspectionSeverityView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsAddMask}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsAddMask))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = SkipItemsDialogThemedIcons.SkipItemsAddMask.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(SkipItemsDialogThemedIcons.SkipItemsAddMask), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsAddMask&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsAddMask">
             <summary>
              <para>
                <para>Autogenerated identifier class for the SkipItemsAddMask Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsAddMask.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsAddMask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsAddMask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = SkipItemsDialogThemedIcons.SkipItemsAddMask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsAddMask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsAddMask.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the SkipItemsAddMask Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsAddMask"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsAddMask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsAddMask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = SkipItemsDialogThemedIcons.SkipItemsAddMask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsAddMask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsEditMask">
             <summary>
              <para>
                <para>Autogenerated identifier class for the SkipItemsEditMask Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsEditMask.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsEditMask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsEditMask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = SkipItemsDialogThemedIcons.SkipItemsEditMask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsEditMask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsEditMask.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the SkipItemsEditMask Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsEditMask"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsEditMask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsEditMask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = SkipItemsDialogThemedIcons.SkipItemsEditMask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsEditMask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsRemoveMask">
             <summary>
              <para>
                <para>Autogenerated identifier class for the SkipItemsRemoveMask Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsRemoveMask.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsRemoveMask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsRemoveMask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = SkipItemsDialogThemedIcons.SkipItemsRemoveMask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsRemoveMask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsRemoveMask.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the SkipItemsRemoveMask Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons.SkipItemsRemoveMask"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Environment.Src.Options.Inspections.SkipItemsDialogThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:SkipItemsDialogThemedIcons+SkipItemsRemoveMask}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(SkipItemsDialogThemedIcons.SkipItemsRemoveMask))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = SkipItemsDialogThemedIcons.SkipItemsRemoveMask.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;SkipItemsDialogThemedIcons.SkipItemsRemoveMask&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Inspections.SkipItemsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Inspections.SkipItemsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Inspections.SkipItemsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Inspections.SkipDaemonItemsPanel.myTreeHasSelection">
            <summary>
            Whether there're selected items currently in the tree.
            To manage the Remove button's Enabled state.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpMemberOrderPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpMemberOrderPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpMemberOrderPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpMemberOrderPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.OptionsManager"/> or <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> out of it.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpNamespaceImportsPage.myBindSettings">
            <summary>
            List of bindings to from-target-apply on OK.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpNamespaceImportsPage.FillSettingsBag(JetBrains.DataFlow.Lifetime)">
            <summary>
            Prepares a settings bag for the language-neutral settings presenter.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpNamespaceImportsPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.OptionsManager"/> or <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> out of it.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.OptionPages.CodeStyle.Impl.ModifiersOrderEdit.InitializeComponent(JetBrains.UI.Icons.IThemedIconManager)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.OptionPages.CodeStyle.Impl.ModifiersOrderEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase">
            <summary>
            Shared services for <see cref="T:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.CSharp.CsharpNamespaceImportsPage"/>
            and <see cref="T:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.VB.VbnetNamespaceImportsPage"/> and <c>RazorNamespaceImportsPage</c>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.AddImportsToDeepestScope">
            <summary>
            A setting from per-language import settings.
            Optional.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.QualifiedUsingAtNestedScope">
            <summary>
            A setting from per-language import settings.
            Optional.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.AllowAlias">
            <summary>
            A setting from per-language import settings.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.CanUseGlobalAlias">
            <summary>
            A setting from per-language import settings.
            Optional.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.ImportDirectiveName">
            <summary>
            Tells how to present the import directive name in the lanugage being edited.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.KeepImports">
            <summary>
            A setting from per-language import settings.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.KeepNontrivialAlias">
            <summary>
            A setting from per-language import settings.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.MandatoryImports">
            <summary>
            A setting from per-language import settings.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.PreferQualifiedReference">
            <summary>
            A setting from per-language import settings.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.CreateView(JetBrains.UI.Application.IUIApplication,JetBrains.DataFlow.Lifetime,JetBrains.DataFlow.PropertyBag,System.Windows.Forms.TableLayoutPanel,JetBrains.ReSharper.Psi.PsiIconManager,JetBrains.UI.Application.UIApplication,JetBrains.Application.Interop.NativeHook.IWindowsHookManager,JetBrains.CommonControls.Validation.FormValidators)">
            <summary>
            Creates a view for imports page. Extracts the language-neutral part.
            </summary>
            <param name="environment"></param>
            <param name="lifetime">Destruction queue.</param>
            <param name="settings">Bag with settings to be edited.</param>
            <param name="grid">The grid to work in.</param>
            <param name="psiIconManager"></param>
            <param name="uiApplication"></param>
            <param name="windowsHookManager"></param>
            <param name="formValidators"></param>
            <returns>The list of bindings to copy-from-target on OK.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.InitView_ImportsOptimization(JetBrains.DataFlow.Lifetime,JetBrains.UI.Application.IUIApplication,JetBrains.DataFlow.PropertyBag,System.Windows.Forms.TableLayoutPanel,System.Windows.Forms.Control,System.Action{JetBrains.DataFlow.IPropertyBinding},JetBrains.UI.Application.UIApplication,JetBrains.Application.Interop.NativeHook.IWindowsHookManager,JetBrains.CommonControls.Validation.FormValidators)">
            <summary>
            Creates a section.
            </summary>
            <param name="lifetime"></param>
            <param name="environment"></param>
            <param name="bag">Settings bag.</param>
            <param name="grid">The outermost grid.</param>
            <param name="stack">A stack panel that lives in the top cell of the <paramref name="grid"/>.</param>
            <param name="bind">Function to store the binding for back-application on OK.</param>
            <param name="uiApplication"></param>
            <param name="windowsHookManager"></param>
            <param name="formValidators"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.NamespaceImportsPageBase.InitView_ReferenceQualification(JetBrains.UI.Application.IUIApplication,JetBrains.DataFlow.Lifetime,JetBrains.DataFlow.PropertyBag,System.Windows.Forms.Control,System.Action{JetBrains.DataFlow.IPropertyBinding})">
            <summary>
            Creates a section.
            </summary>
            <param name="environment"></param>
            <param name="lifetime"></param>
            <param name="bag">Settings bag.</param>
            <param name="stack">A stack panel to add the control rows into.</param>
            <param name="bind">Function to store the binding for back-application on OK.</param>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.VB.VbnetNamespaceImportsPage.myBindSettings">
            <summary>
            List of bindings to from-target-apply on OK.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.VB.VbnetNamespaceImportsPage.FillSettingsBag(JetBrains.DataFlow.Lifetime)">
            <summary>
            Prepares a settings bag for the language-neutral settings presenter.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.CodeStyle.VB.VbnetNamespaceImportsPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.OptionsManager"/> or <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.EnvironmentGeneralPage">
            <summary>
            The environment options page.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Languages.LanguagesPageView">
            <summary>
            Represents UI part of the plugins options page
            </summary>
            <summary>
            LanguagesPageView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Languages.LanguagesPageView.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Languages.LanguagesPageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Naming.CustomNamingOptionsPage`1.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.CustomNamingOptionsPage`1.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.CustomNamingOptionsPage`1.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Naming.EditUserRuleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditUserRuleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditUserRuleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Options.Naming.AdvancedNamingSettingsForm`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.AdvancedNamingSettingsForm`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.AdvancedNamingSettingsForm`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.src.Options.Naming.PredefinedNamingSettingsPage">
            <summary> 
            Interaction logic for PredefinedNamingSettingsPage.xaml
            </summary>
            <summary>
            PredefinedNamingSettingsPage
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.src.Options.Naming.PredefinedNamingSettingsPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyDialog">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            EditNamingPolicyDialog
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyDialog.SelectedSettingsLayer">
            <summary>
            Gets settings layer if user used Save To, null otherwise
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.Options.Naming.EditNamingPolicyDialog.CanSaveTo">
            <summary>
            Gets whether to show save to button
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator">
            <summary>
            A status bar indicator for the PSI cache notifier.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.GapAroundText">
            <summary>
            Gap on the right and left of the text, but within the progress fill.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.GapIconProgress">
            <summary>
            Gap between the icon and the progress area.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.TicksBeforeChangingImmediateSize">
            <summary>
            Number of <see cref="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myTicksAfterDesiredSizeChanged"/> ticks before the immediate size starts adapting.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.SizeAdaptationStep">
            <summary>
            Step for changing the size when adapting.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myDesiredSize">
            <summary>
            The indicator's desired size, as derived from the content.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myDesiredSizeImmediate">
            <summary>
            The indicator size currently reported to the host as the desired size. Gradually changes to fit <see cref="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myDesiredSize"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myGottenDirty">
            <summary>
            The control has gotten dirty and should be repainted.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myTicksAfterDesiredSizeChanged">
            <summary>
            Calculates the number of timer ticks after the <see cref="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myDesiredSize"/> change.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myTimerAdjustDesiredSize">
            <summary>
            Gradually adjusts <see cref="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myDesiredSizeImmediate"/> to fit <see cref="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myDesiredSize"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.OnUpdateDesiredSize(System.String)">
            <summary>
            Calculates the true desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.OnTimerAdjustDesiredSize">
            <summary>
            When the timer ticks, gradually changes the immediate desired size value towards the actual desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.GetTooltip(JetBrains.DataFlow.Lifetime,System.Drawing.Point)">
            <summary>
            Called by tooltip manager, if the tooltip is to be displayed
            </summary>
            <param name="lifetime"></param>
            <param name="point">Point in control's coordinates</param>
            <returns><see cref="T:JetBrains.UI.Tooltips.ITooltipInfo"/>, or <c>Null</c> if no tooltip should be displayed.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.Paint(System.Drawing.Graphics)">
            <summary>
            Renders the context of the windowless control. The rendering bounds are given by the 
            </summary>
            <param name="g">The device context.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.SetBounds(JetBrains.UI.IGraphicsContainer,System.Drawing.Rectangle)">
            <summary>
            Performs the top-down layouting stage, when the control lais out its parts within the given bounds.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="bounds">The new bounds. From now on, this value should be returned from the <see cref="P:JetBrains.CommonControls.IWindowlessControl.Bounds"/> property.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Tells the control the details about the new layout applied to it by the controlling entity in conjunction with some <see cref="T:JetBrains.UI.IPopupLayouter"/>.
            Typically, the control need not apply the given size and location because that should be done by the controlling entity.
            The control may change its presentation in response to the layouting details, for example, whether it's attached to the top or the bottom of the anchoring rect.
            </summary>
            <param name="layout">The layouting details.</param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.AutoActivate">
            <summary>
            Gets or sets whether the control should be activated initially when it's shown.
            The typical implementation for a form is to return a negative of this value from the <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation"/> override.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.Bounds">
            <summary>
            The windowless control bounds in the parent coordinates. The implementor should just store and return the value set by the owner.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.GottenDirty">
            <summary>
            The control has gotten dirty and should be repainted.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup">
            <summary>
            The popup view for the cache notifier.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.myPopupWindowMutex">
            <summary>
            Identity for the background notifier windows.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.OnAnyClick(System.Object,System.EventArgs)">
            <summary>
            Something has been clicked â€” turn modal.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Tells the control the details about the new layout applied to it by the controlling entity in conjunction with some <see cref="T:JetBrains.UI.IPopupLayouter"/>.
            Typically, the control need not apply the given size and location because that should be done by the controlling entity.
            The control may change its presentation in response to the layouting details, for example, whether it's attached to the top or the bottom of the anchoring rect.
            </summary>
            <param name="layout">The layouting details.</param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.AutoActivate">
            <summary>
            Gets or sets whether the control should be activated initially when it's shown.
            The typical implementation for a form is to return a negative of this value from the <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation"/> override.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.ForegroundNotifierWindow.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.IsVisibleViewIndicatorUi">
            <summary>
            Gets whether the corresponding view should be visible.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.IsVisibleViewPopupUi">
            <summary>
            Gets whether the corresponding view should be visible.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.DescriptionUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.Description"/>, marshalled to UI.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.HeaderUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.Header"/>, marshalled to UI.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.IsActiveUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.IsActive"/>, marshalled to UI.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.ProgressUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.Progress"/>, marshalled to UI.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.HideReadLocks(JetBrains.DataFlow.Lifetime,JetBrains.Application.IShellLocks)">
            <summary>
            Hides all of the read locks taken by the current thread, and returns them back on dispose.
            Used by wait-for-caches kind functions to allow write locks on the other thread.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.InitDataFlow_AutoCleanUp">
            <summary>
            Whenever notifier is hidden, clean it up.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.InitDataFlow_MarshalUi">
            <summary>
            Marshal from the immediate thread-neutral properties to the in-ui-thread safe properties.
            When reading values, use the UI versions.
            When setting the values, use the non-UI versions.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.InitDataFlow_ShowViews(JetBrains.UI.StatusBar.IStatusBar)">
            <summary>
            What views to show, and when.
            </summary>
            <param name="statusBar"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierImpl.WaitForCaches(System.String,System.String)">
            <summary>
            Syncroniously wait until caches are ready, with a popup progress window.
            Must be called under a read lock.
            </summary>
            <returns><c>True</c> if the caches are ready, <c>False</c> if user-cancelled.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.RecentFiles.RecentFilesCommands.ShowRecentEdits">
            <summary>
            Displays a popup menu list of the recent edits.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.RecentFiles.RecentFilesCommands.ShowRecentFiles">
            <summary>
            Displays a popup menu list of the recent files.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Tips.TipsForm.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Tips.TipsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Tips.TipsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
