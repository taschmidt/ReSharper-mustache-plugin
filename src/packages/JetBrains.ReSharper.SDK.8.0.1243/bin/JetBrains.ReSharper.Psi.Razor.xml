<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Psi.Razor</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+Razor}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.Razor))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = PsiRazorThemedIcons.Razor.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(PsiRazorThemedIcons.Razor), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;PsiRazorThemedIcons.Razor&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.Razor">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Razor Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.Razor.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+Razor}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.Razor))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.Razor.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.Razor&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.Razor.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Razor Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.Razor"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+Razor}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.Razor))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.Razor.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.Razor&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethod">
             <summary>
              <para>
                <para>Autogenerated identifier class for the RazorHelperMethod Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethod.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+RazorHelperMethod}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.RazorHelperMethod))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.RazorHelperMethod.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.RazorHelperMethod&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethod.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the RazorHelperMethod Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethod"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+RazorHelperMethod}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.RazorHelperMethod))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.RazorHelperMethod.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.RazorHelperMethod&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethodVs">
             <summary>
              <para>
                <para>Autogenerated identifier class for the RazorHelperMethodVs Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethodVs.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+RazorHelperMethodVs}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.RazorHelperMethodVs))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.RazorHelperMethodVs.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.RazorHelperMethodVs&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethodVs.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the RazorHelperMethodVs Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorHelperMethodVs"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+RazorHelperMethodVs}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.RazorHelperMethodVs))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.RazorHelperMethodVs.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.RazorHelperMethodVs&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorSection">
             <summary>
              <para>
                <para>Autogenerated identifier class for the RazorSection Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorSection.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+RazorSection}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.RazorSection))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.RazorSection.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.RazorSection&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorSection.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the RazorSection Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons.RazorSection"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Psi.Razor.Resources.PsiRazorThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:PsiRazorThemedIcons+RazorSection}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(PsiRazorThemedIcons.RazorSection))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = PsiRazorThemedIcons.RazorSection.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;PsiRazorThemedIcons.RazorSection&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Razor.Impl.CustomHandlers.IRazorPsiServices.SplitCodebehindNode(JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Splits comments and error elements attached to the end
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Razor.Impl.CustomHandlers.IRazorPsiServices.GetOriginalAnchorAndType(JetBrains.ReSharper.Psi.Tree.ITreeNode,System.Boolean,JetBrains.ReSharper.Psi.Tree.ITreeNode,System.Predicate{JetBrains.Util.Pair{JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Razor.Impl.CustomHandlers.OriginalStatementType}})">
            <summary>
            If original node not found (for synthetic or empty statements), iterate until it would be found.
            If first == true, iterate forward, otherwise, backward
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Psi.Razor.Impl.Generate.RazorCodeGeneratorProcessor.WriteHtml(JetBrains.ReSharper.Psi.Web.Generation.GenerationResults,System.Boolean)">
            <summary>
            Throw all cumulative html if any
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Impl.RazorCodeBehindGeneratedDocumentService">
            <summary>
            Generated document service for C# and VB languages of Razor page.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Tree.IRazorBaseTypeDirective">
            <summary>
            Common interface for @inherits and @model directives
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Tree.IRazorHtmlMarkup">
            <summary>
            Special syntax for inserting HTML inside code blocks, such as &lt;text&gt;..&lt;/text&gt; or @:
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Tree.IRazorBlockMarkup">
            <summary>
            &lt;text&gt;..&lt;/text&gt; block (for HTML inside code blocks)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Tree.IRazorLineMarkup">
            <summary>
            @: (for HTML line inside code block)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Parsing.RazorTreeBuilder">
            <summary>
            RazorTreeBuilder
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Psi.Razor.RazorKeywords.Model">
            <remarks>
            Only for ASP.NET MVC Razor
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Psi.Razor.Tree.RazorElementTypes.RazorModelDirectiveNodeType">
            <remarks>
            Applied only for MVC
            </remarks>
        </member>
    </members>
</doc>
