<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Features.Intellisense</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CodeCompletionPage}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CodeCompletionPage&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CodeCompletionPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CodeCompletionPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CodeCompletionPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CodeCompletionPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CodeCompletionPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CodeCompletionPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Collapse">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Collapse Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Collapse.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+Collapse}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.Collapse))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.Collapse.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.Collapse&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Collapse.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Collapse Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Collapse"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+Collapse}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.Collapse))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.Collapse.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.Collapse&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CompletionAppearance Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CompletionAppearance}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CompletionAppearance))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CompletionAppearance.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CompletionAppearance&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CompletionAppearance Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CompletionAppearance}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CompletionAppearance))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CompletionAppearance.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CompletionAppearance&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the EditorOptionsPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+EditorOptionsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.EditorOptionsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.EditorOptionsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the EditorOptionsPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+EditorOptionsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.EditorOptionsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.EditorOptionsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisenseAutopopupPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseAutopopupPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisenseAutopopupPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseAutopopupPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisenseCompletingCharsPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseCompletingCharsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisenseCompletingCharsPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseCompletingCharsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisenseGeneral Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseGeneral}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseGeneral))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseGeneral&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisenseGeneral Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseGeneral}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseGeneral))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseGeneral&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisensePage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisensePage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisensePage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisensePage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisensePage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisensePage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisensePage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisensePage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisensePage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisensePage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ParameterInfoPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ParameterInfoPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ParameterInfoPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ParameterInfoPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ParameterInfoPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ParameterInfoPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ParameterInfoPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ParameterInfoPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollDown">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ScrollDown Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollDown.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ScrollDown}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ScrollDown))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ScrollDown.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ScrollDown&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollDown.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ScrollDown Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollDown"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ScrollDown}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ScrollDown))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ScrollDown.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ScrollDown&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollUp">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ScrollUp Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollUp.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ScrollUp}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ScrollUp))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ScrollUp.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ScrollUp&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollUp.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ScrollUp Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ScrollUp"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ScrollUp}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ScrollUp))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ScrollUp.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ScrollUp&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Unpin">
             <summary>
              <para>
                <para>Autogenerated identifier class for the Unpin Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Unpin.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+Unpin}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.Unpin))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.Unpin.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.Unpin&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Unpin.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the Unpin Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.Unpin"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+Unpin}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.Unpin))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.Unpin.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.Unpin&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletingCharactersSettingsControl">
            <summary>
            Interaction logic for CompletingCharactersSettingsControl.xaml
            </summary>
            <summary>
            CompletingCharactersSettingsControl
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.CompletingCharactersSettingsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletionAppearancePage">
            <summary>
            The visual completion settings.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletionBehaviorPage">
            <summary>
            The behavioral code completion settings.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.EditorBehaviorPage">
            <summary>
            The Editor-related options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.IntelliSenseGeneralPage.AddDisabledMembersCueBanner(JetBrains.DataFlow.Lifetime,System.Windows.Forms.Control,JetBrains.UI.Options.OptionsSettingsSmartContext,JetBrains.UI.Application.IUIApplication)">
            <summary>
            Creates a cue banner to be placed on the top of dependent pages that tells why some of the controls have been disabled (R# intellisense off), and how to reenable them.
            The banner is hidden when R# intellisense is on.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.IntelliSensePage">
            <summary>
            The IntelliSense node in the options tree.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.LanguageCompletingCharSettings">
            <summary>
            Interaction logic for LanguageCompletingCharSettings.xaml
            </summary>
            <summary>
            LanguageCompletingCharSettings
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.LanguageCompletingCharSettings.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.ParameterInfoPage">
            <summary>
            IntelliSense Parameter Info.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.IntellisenseEnabledList">
            <summary>
            Interaction logic for ParametersCheckList.xaml
            </summary>
            <summary>
            IntellisenseEnabledList
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.IntellisenseEnabledList.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.src.Options.AutomaticCompletionSettignsControl">
            <summary>
            Interaction logic for UserControl1.xaml
            </summary>
            <summary>
            AutomaticCompletionSettignsControl
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.src.Options.AutomaticCompletionSettignsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.Delay">
            <summary>
            Handling of arrows while popu is shown
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.mySolution">
            <summary>
            The solution in which we are
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.myTextControl">
            <summary>
            The editor to use
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.myContext">
            <summary>
            The current context
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.myAlarm">
            <summary>
            The alarm to use
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.myLBoundRangeMarker">
            <summary>
            Marker to the left bound
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.myIsShownOnTop">
            <summary>
            True if parameter info is shown on top
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.Context">
            <summary>Gets the context</summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.TextControl">
            <summary>Gets the editor</summary>
        </member>
        <member name="E:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.EditorParameterInfoHandler.ContextChanged">
            <summary>
            Event which is fired when context changes
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.InvocableControl">
            <summary>
            Once a control, nowdays it's only a renderer for a single signature from the <see cref="T:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.ParameterInfoControl"/> form.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.IParameterInfoHandlerFactory">
            <summary>
            A factory for instantiating parameter info handlers
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.ParameterInfoAction">
            <summary>
            Action for showing parameter info in method calls (IDEA's Ctrl+P feature).
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.ParameterInfoControlBase.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.ParameterInfoControlBase.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.ParameterInfoControlBase.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.ParameterInfo.ParameterInfoPopupControllerImpl">
            <summary>
            Controls autopopup for parameter info
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView">
            <summary>
            Implements the view that displays a QuickDoc extract from the XmlDoc help on the given declared element.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.HeaderHeight">
            <summary>
            QuickDock window header height
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.OptionWidthOnScreenFactor">
            <summary>
            Fraction of the screen width that can be occupied, at most, by the window when auto-sizing to fit the content horizontally.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.BorderSize">
            <summary>
            Border size, or padding of the Web browser control within the outer form bounds.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.BrowserMinSize">
            <summary>
            Minimum size of the Web browser control, as it wouldn't behave well when size is too small.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.MinLength">
            <summary>
            Minimum recommended length of the window against the corresponding dimensions. Restores after new content is loaded into the window; temporarily may be scaled down below this value.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.myQDControl">
            <summary>
            The Web browser control than renders the content.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.myAutoSizeToFit">
            <summary>
            <see cref="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.AutoSizeToFit"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.myDesiredSize">
            <summary>
            The size of the form that's recommended so that the browser content fit into the form.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.mySizeBarHitTestResults">
            <summary>
            A lazy-init collection of the hit test results that identify the size bars.
            Use <see cref="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.SizeBarHitTestResults"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.HitTest(System.Drawing.Point)">
            <summary>
            Hit-tests the window areas and returns the result. <see cref="F:JetBrains.Interop.WinApi.HitTestResult.HTTRANSPARENT"/> means the result is unspecified (eg, normal client area or outside the window).
            </summary>
            <param name="ptHitClient">The hit point, in client coordinates.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.InitControls(JetBrains.DataFlow.Lifetime)">
            <summary>
            Inits the instance UI.
            </summary>
            <param name="lifetime"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closing"></see> event.
            </summary>
            
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.
            </summary>
            
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.QuickDocViewWidth">
            <summary>
            Gets or sets the QuickDocView custom width global setting.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.AutoSizeToFit">
            <summary>
            Gets or sets whether the control should accomodate its size to fit the content when navigating to another documentation.
            This mode is turned off for the current instance after the user resizes its manually.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.SizeBarHitTestResults">
            <summary>
            Gets the collection of the hit test results that identify the size bars.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocView.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocControl">
            <summary>
            Displays QuickDoc
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocControl.myBrowser">
            <summary>
            The Web browser control than renders the content.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocControl.GetPrefferedWidth">
            <summary>
            Performs layout calculations to eliminate scrolling.
            </summary>
            <returns>Width of control without line breaks and horizontal scrolling</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocControl.GetPrefferedHeight(System.Int32)">
            <summary>
            Performs layout calculations to eliminate scrolling
            </summary>
            <param name="desiredWidth">Desired control width</param>
            <returns>Height of control without vertical scrolling</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocControl.DocumentText">
            <summary>
            Text displaying in control. Can be used for hacks
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController">
            <summary>
            Controller for QuickDocControl. Performs navigation, tracks history. It <b>MUST</b> be explicitly disposed. 
            Control can be disposed instead of controller.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController.#ctor(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Psi.PsiLanguageType,JetBrains.ReSharper.Features.Intellisense.QuickDoc.QuickDocManager)">
            <summary>
            Creates controller
            </summary>
            <param name="solution">Solution</param>
            <param name="language">Default language to render</param>
            <param name="quickDocManager"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController.OpenInEditor">
            <summary>
            Opens current item in VS editor
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController.UpdateContent">
            <summary>
            Updates the entry of control
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController.ContentUpdated">
            <summary>
            Raised when control content is updated
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController.KeyPressed">
            <summary>
            Raised when key is pressed. Currenly only Escape passed.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.QuickDoc.StandAlone.QuickDocController.DefaultLanguage">
            <summary>
            Default language for view
            </summary>
        </member>
    </members>
</doc>
