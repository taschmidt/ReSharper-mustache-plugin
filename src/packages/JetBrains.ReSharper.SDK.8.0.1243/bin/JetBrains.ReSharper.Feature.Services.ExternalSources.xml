<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Feature.Services.ExternalSources</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Feature.Services.ExternalSources.ContextNavigation.GotoDeclarationVsDelegator">
            <summary>
            Allows to perform common VS goto definition (F12).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.ExternalSources.Core.ExternalSourcesActivation.Active">
            <summary>
            Turn on/off entire External Sources subsystem.
            Currenly used to delay External Sources loading in Visual Studio.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Core.IDecompilationCache.CanBeCachedFile(System.String,JetBrains.Util.FileSystemPath)">
            <summary>
            Checks whether file is under cache directory and on appropriate level.
            Doesn't impose any guarantees about GetCacheItem result
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Feature.Services.ExternalSources.Core.DecompilationCacheItem.Moniker">
            <summary>
            Null for assembly-level decompilation. i.e. assembly attributes
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Core.IExternalSourcesService.NavigateToSources(JetBrains.ReSharper.Psi.ICompiledElement,System.Collections.Generic.IEnumerable{JetBrains.ReSharper.Feature.Services.ExternalSources.Core.IExternalSourcesProvider})">
            <summary>
            Tries to get source(s) for <paramref name="compiledElement"/> from <paramref name="providers"/>
            </summary>
            <returns>source file(s) related to specified compiled element, null if user cancelled action</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Core.IExternalSourcesService.GetOrCreateSourceFile(JetBrains.ProjectModel.IProjectFile)">
            <summary>
            Creates psiSourceFile or returns existing if there is ExternalSourcesMapping available
            </summary>
            <param name="projectFile">Project file from misc files project</param>
            <returns>PsiSourceFile or null</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Pdb.Cache.PdbScanner.GetUpdatedPdbInfo(JetBrains.Util.FileSystemPath,JetBrains.ReSharper.Feature.Services.ExternalSources.Pdb.PdbInfo)">
            <summary>
            parses assembly file for a pdb location.
            gets cached value for the assembly file and compares cached  pdbinfo's timestamp with just obtained one.
            if they differs - parse pdb and cache pdbinfo
            </summary>
            <param name="assemblyFile"></param>
            <param name="oldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.DeclaredElementBinder.BindDeclarations(JetBrains.ReSharper.Psi.Tree.IFile,JetBrains.ReSharper.Psi.Modules.IPsiModule,System.Boolean)">
            <summary>
            Bind declarations in <paramref name="file"/> to corresponding declared elements in psiModule.
            WARNING: all references of psiModule must be loaded beforehand because
            binding process uses xmldocids which requires all types to be resolved correctly.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Core.IExternalSourcesProvider.NavigateToSources(JetBrains.ReSharper.Psi.ICompiledElement,JetBrains.Application.Progress.ITaskExecutor)">
            <summary>
            Tries to get source(s) for specified compiled element
            </summary>
            <returns>
            source file(s) related to specified compiled element,
            empty array if none (i.e. not applicable to this provider),
            null if the navigation was handled by provider
            </returns>
            <exception cref="T:JetBrains.Application.Progress.ProcessCancelledException">User cancelled the action</exception>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Pdb.Cache.PdbCacheManagerImpl.ScanAssemblyFile(JetBrains.Util.FileSystemPath)">
            <summary>
            Scans assembly file and update cached data
            </summary>
            <param name="assemblyPath">Assembly file path to scan</param>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Pdb.IPdbService.DownloadSourceFilesForTypeIfNeeded(JetBrains.ProjectModel.Model2.Assemblies.Interfaces.IAssemblyFile,JetBrains.ReSharper.Psi.IClrTypeName,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
            Downloads source files for <paramref name="typeName"/> type
            </summary>
            <exception cref="T:JetBrains.Application.Progress.ProcessCancelledException">if user cancelled download</exception>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.NamespaceFolderExtensions.GetFolderName(System.String)">
            <summary>
            Gets relative folder name corresponding to this namespace
            (Namespace1.Namespace2. ... .NamespaceN => "Namespace1\Namespace2\...\NamespaceN\")
            ("" => "")
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.NamespaceFolderExtensions.GetFolderName(JetBrains.ReSharper.Psi.INamespace)">
            <summary>
            Gets relative folder name corresponding to this namespace
            (Namespace1.Namespace2. ... .NamespaceN => "Namespace1\Namespace2\...\NamespaceN\")
            ("" => "")
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.NamespaceFolderExtensions.GetRelativeName(System.String,System.String)">
            <example>"A\B\Cd\File.ext" "A\B\" => "Cd\File.ext"</example>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.NamespaceFolderExtensions.GetRelativeFolderName(JetBrains.ReSharper.Psi.INamespace,System.String)">
            <summary>
            Gets relative to defaultNamespace folder name corresponding to this namespace 
            (Namespace1.Namespace2. ... .NamespaceN, "Namespace1\" => "Namespace2\...\NamespaceN\")
            ("" => "")
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.TypeElementFileNameExtensions.TryGetFileName(JetBrains.ReSharper.Psi.ITypeElement,JetBrains.Util.JetTuple{JetBrains.ReSharper.Psi.PsiLanguageType,System.String})">
            <summary>
            Gets source file name without path
            (~typeElement.ShortName + "." + extension)
            (typeElement.ShortName + "`" + X + "." + extension, 
            for generic types with X type parameters)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.TypeElementFileNameExtensions.TryGetCSharpFileName(JetBrains.ReSharper.Psi.ITypeElement)">
            <summary>
            Gets C# source file name without path
            (~typeElement.ShortName + ".cs")
            (typeElement.ShortName + "`" + X + ".cs", 
            for generic types with X type parameters)
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.TypeElementFileNameExtensions.TryGetElementCSharpFileName(JetBrains.ReSharper.Psi.IClrDeclaredElement)">
            <example>Type{...declaredElement...} => "Type.cs"</example>
            <example>GenericType{...declaredElement...} => "GenericType`X.cs", where X is number of type parameters</example>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.TypeElementFileNameExtensions.TryGetRelativeCSharpFilePath(JetBrains.ReSharper.Psi.IClrDeclaredElement)">
            <example>Namespace.NestedNamespace.Type{...declaredElement...} => #src#\Namespace\NestedNamespace\Type.cs</example>
            <example>Namespace.NestedNamespace.GenericType{...declaredElement...} => #src#\Namespace\NestedNamespace\GenericType`X.cs, where X is number of type parameters</example>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.TypeElementFileNameExtensions.ConvertToFilePath(System.String)">
            <example>Folder1.Folder2.file.aaa => Folder1\Folder2\file.aaa</example>
            <example>Folder1/Folder2\file.aaa => Folder1\Folder2\file.aaa</example>
            <example>Folder1/Folder2.file.aaa => Folder1\Folder2.file.aaa</example>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.ExternalSources.Utils.TypeElementFileNameExtensions.NormalizeFileName(System.String)">
            <example>Folder1.Folder2.file.aaa => Folder1\Folder2\file.aaa</example>
            <example>Folder1/Folder2\file.aaa => Folder1\Folder2\file.aaa</example>
            <example>Folder1/Folder2.file.aaa => Folder1\Folder2.file.aaa</example>
        </member>
    </members>
</doc>
